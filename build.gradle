plugins {
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id "io.freefair.lombok" version "8.11"
	id 'java'
	id "com.github.ben-manes.versions" version "0.51.0"
}

group = 'uk.gov.ons'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudGcpVersion', "5.9.0")
	set('springCloudVersion', "2024.0.0")
}

configurations {
	mockitoAgent
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-web' 

	implementation 'com.google.cloud:spring-cloud-gcp-dependencies:5.9.0'
	implementation 'com.google.cloud:spring-cloud-gcp-starter-bigquery'
	implementation 'com.google.cloud:spring-cloud-gcp-starter-pubsub'
	implementation 'com.google.cloud:spring-cloud-gcp-starter-sql-mysql'
	implementation 'com.google.cloud:spring-cloud-gcp-starter-storage'

	implementation 'org.springframework.integration:spring-integration-core:6.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.projectlombok:lombok:1.18.30'
	implementation 'io.micrometer:micrometer-registry-prometheus:1.14.2'
	implementation 'commons-io:commons-io:2.18.0'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	
	testImplementation 'org.junit.platform:junit-platform-runner:1.11.3'

	// Required for MockMvc autoconfigure
	testImplementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'io.projectreactor:reactor-test:3.7.1'
	testImplementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.14'
	testImplementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.14'
	testImplementation 'org.mockito:mockito-inline:5.2.0'
	testImplementation 'com.h2database:h2:2.3.232'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:4.2.0'
	testImplementation 'org.mockito:mockito-core:5.14.2'
	mockitoAgent 'org.mockito:mockito-core:5.14.2'
	
	if (!project.hasProperty('excludeTests')) {
		testImplementation 'com.playtika.testcontainers:embedded-google-pubsub:3.1.9'
	}

	// Resolves the java.lang.NoClassDefFoundError: org/junit/platform/engine/EngineDiscoveryListener in Eclipse	
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.11.3'
}

configurations.mockitoAgent {
    transitive = false
}

dependencyManagement {
	imports {
		mavenBom "com.google.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
	
	doFirst { 
        jvmArgs("-javaagent:${configurations.mockitoAgent.singleFile}")
    }

	// listen to events in the test execution lifecycle
	beforeTest { descriptor ->
		logger.lifecycle("Running test: " + descriptor)
	}
	
	if (project.hasProperty('excludeTests')) {
        exclude project.property('excludeTests')
        exclude '*bootstrap.properties'
    }
}
